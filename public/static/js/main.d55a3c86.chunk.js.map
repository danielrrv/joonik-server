{"version":3,"sources":["assets/ball.svg","logo.svg","assets/arrow.svg","reducers/pokemonReducer.js","types/actionTypes.js","reducers/UIReducers.js","reducers/rootReducers.js","store/configureStore.js","components/Header.js","actions/pokemonActions.js","components/PokemonCard.js","components/Buscador.jsx","containers/PokemonListComponent.js","containers/PokemonDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","pagination","pokemons","abilities","pokemonReducer","state","action","payload","type","Object","assign","concat","results","filter","el","map","message","loading","UIReducers","createRootReducer","history","combineReducers","router","connectRouter","data","ui","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","Header","className","receivePokemonSuccess","json","getPokemons","page","dispatch","getState","a","fetch","response","colorArray","Types","types","index","style","padding","margin","borderRadius","backgroundColor","opacity","name","connect","props","url","pokemon","React","useState","poke","setPoke","pending","setPending","useEffect","method","then","catch","e","console","log","Math","floor","random","length","onClick","push","checkDetails","src","sprites","front_default","Buscador","buscando","text","setText","onBlur","onChange","preventDefault","target","value","placeholder","searchArray","setSearcArray","setBuscando","ref","useRef","div","initial","animate","exit","term","array","startsWith","Card","display","alignContent","flexDirection","width","height","marginBottom","justifyContent","weight","marginLeft","species","base_experience","moves","splice","move","stats","stat","Chart","canvas","document","getElementById","ctx","getContext","fillStyle","strokestyle","fillRect","id","base_stat","match","params","executeScroll","scrollTo","current","offsetTop","scrollToRef","x","fontSize","App","exact","path","component","PokemonListComponent","PokemonDetail","Boolean","location","hostname","store","createStore","applyMiddleware","thunk","routerMiddleware","persistStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d55a3c86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ball.4a7a97be.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.5fc65882.svg\";","import { PAGINATION, SUCCESS, RECEIVE_POKEMON_ERROR, RECEIVE_POKEMON_SUCCESS } from \"../types/actionTypes\";\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    pagination: 0,\n    pokemons: [\n\n    ],\n    abilities: {\n\n    }\n\n\n}\n\n\n\n\n\nexport const pokemonReducer = (state = initialState, action) => {\n    let { payload } = action;\n    switch (action.type) {\n        case PAGINATION:\n            //actualiza la paginacion. Incrementa ++1 cada vez.\n            return Object.assign({}, state, { pagination: state.pagination + 1 });\n        //Recibe los pokemons.\n        case RECEIVE_POKEMON_SUCCESS:\n            return Object.assign({},\n                state,\n                { pokemons: state.pokemons.concat(payload.results).filter(el => el).map(el => el) })\n        default:\n            return state\n    }\n}","export const PAGINATION = 'PAGINATION';\nexport const RECEIVE_POKEMON_ERROR = 'RECEIVE_POKEMON_ERROR';\nexport const RECEIVE_POKEMON_SUCCESS = 'RECEIVE_POKEMON_SUCCESS';\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = 'SUCCESS';","import { RECEIVE_POKEMON_ERROR, PAGINATION, RECEIVE_POKEMON_SUCCESS } from '../types/actionTypes'\n\n\nconst initialState = {\n    message: null,\n    loading: false\n}\n\n\n\nexport const UIReducers = (state = initialState, action) => {\n    switch (action.type) {\n        case PAGINATION:\n            return Object.assign({}, state, { loading: true })\n        case RECEIVE_POKEMON_SUCCESS:\n            return Object.assign({}, state, { loading: false })\n        case RECEIVE_POKEMON_ERROR:\n            return Object.assign({}, state, { message: action.payload, loading: false })\n        default:\n            return state;\n    }\n}\n\n\n\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router'\nimport { pokemonReducer } from './pokemonReducer'\nimport { UIReducers } from './UIReducers'\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    data: pokemonReducer,\n    ui: UIReducers,\n\n})\nexport default createRootReducer;","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport thunk from \"redux-thunk\"\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport createRootReducer from '../reducers/rootReducers'\n\n\nexport const history = createBrowserHistory()\n\n\n\n\nconst composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\n\nconst combineReducers = createRootReducer(history)\n\nconst persistedReducer = persistReducer(persistConfig, combineReducers)\nexport default function configureStore() {\n    return createStore(\n        persistedReducer,\n        composeEnhancers(applyMiddleware(thunk, routerMiddleware(history))),\n    )\n}","import React from 'react'\nimport \"./Header.css\"\n\n\n\n\n//Header statico de la app.\nconst Header = () => {\n    return (\n        <div\n            className=\"container\" >\n            <p className=\"title\" >POKEMON</p>\n            <div className=\"bars\"></div>\n            <div className='rueda'></div>\n        </div>\n    );\n}\n\nexport default Header\n","\nimport { PAGINATION, RECEIVE_POKEMON_SUCCESS, RECEIVE_POKEMON_ERROR } from '../types/actionTypes'\nimport { push, replace } from 'connected-react-router'\n\n\n// /**\n//  * @params {Object} json\n//  * @returns {Object} \n// */\n\nexport const receivePokemonSuccess = (json) => {\n    return {\n        type: RECEIVE_POKEMON_SUCCESS,\n        payload: json\n    }\n}\n\n\n/**\n * @params {string} message\n * @returns {Object} \n*/\n\nexport const receivePokemonError = (message) => {\n    return {\n        type: RECEIVE_POKEMON_ERROR,\n        payload: message\n    }\n}\n\n/**\n * @params {Object} name\n * @returns {Promise}  \n*/\n\n\nexport const checkDetails = (name) => dispatch => {\n\n    dispatch(push(`/pokemon/${name}`))\n}\n\nexport const backAction = () => dispatch => {\n    dispatch(replace('/'));\n}\n\n\n\n\n\n\n\n/**\n * @param{page} number \n * @return {Promise} \n * \n * Esta funcion es asincronica.\n * 1. dispara una accion de paginacion que va a al UIReducer para colocacr en espera a la app.\n * 2. dispara a request a la respectiva ruta.\n * 3. Resulve las promesas y dispara acciones de exito o fracasa hacia el store.\n*/\n/**\n * @params {number} page\n * @returns {Promise} \n*/\n\n\nexport const getPokemons = (page) => {\n    return async (dispatch, getState) => {\n        let pagination = getState().data.pagination\n        // if (page > getState().data.pagination || getState().data.pokemons.length === 0) {\n        try {\n            dispatch({\n                type: PAGINATION,\n                payload: pagination\n            });\n\n            const response = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=15&offset=${pagination * 10}`)\n            const json = await response.json()\n            dispatch(receivePokemonSuccess(json))\n        }\n        catch (e) {\n            dispatch(receivePokemonError(e.message))\n        }\n        //}\n    }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport \"./PokemonCard.css\";\n\n\n\n\nimport { checkDetails } from '../actions/pokemonActions'\n\n\nconst colorArray = [\"#3be8b0\", \"#ae63e4\", \"#05cc47\", \"#5ecc62\", \"#f67828\", \"#ffc715\"];\n\n\n\nconst PokemonCard = ({ url, key, index, name, dispatch }) => {\n\n    const [poke, setPoke] = React.useState()\n    const [pending, setPending] = React.useState(true)\n    React.useEffect(() => {\n        fetch(url, { method: \"GET\" })\n            .then(response => {\n                return response.json()\n\n            })\n            .then((json) => {\n                setPoke(json)\n                setPending(false)\n\n            })\n            .catch(e => {\n                console.log(e.message)\n            })\n    }, [url]);\n\n    return (\n        <div style={{ opacity:0.9,backgroundColor: colorArray[Math.floor(Math.random() * colorArray.length + 1)] }} onClick={() => dispatch(checkDetails(name))} className=\"card\">\n            {name && <h2>{name}</h2>}\n            {pending ? <p>pending...</p> : <div><img className=\"pic\" src={poke.sprites.front_default} /><Types types={poke.types} /></div>}\n        </div>\n    )\n\n}\n\nconst Types = ({ types }) => {\n    return (<div className=\"types\">\n        {\n            types.map((el, index) => {\n                return < div style={{ padding:4,margin:5,borderRadius:5,backgroundColor: 'white', opacity: 1}} className=\"type\"><p>{el.type.name}</p></div>;\n            })\n        }\n\n    </div >);\n}\n\n\n\nPokemonCard.propTypes = {\n    url: PropTypes.string,\n    name: PropTypes.string\n}\nconst mapStateToProps = (state, props) => ({\n    url: props.pokemon.url || '',\n    name: props.pokemon.name || '',\n    index: props.index\n})\n\nexport default connect(mapStateToProps, null)(PokemonCard);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Buscador = ({ getState, buscando }) => {\n    const [text, setText] = React.useState('pikachu')\n    function handleChange(e) {\n        e.preventDefault()\n        setText(e.target.value)\n        //Funcion tied to Parent \n        getState(e.target.value)\n\n    }\n    return (\n        <div className='search'>\n            <div><input onBlur={buscando(false)} onChange={handleChange} value={text} type=\"input\" placeholder='pikachu' /></div>\n            <div className=\"boton\">Buscar</div>\n        </div>\n    )\n}\n\nBuscador.propTypes = {\n\n    getState: PropTypes.func,\n    buscando: PropTypes.func\n}\n\nexport default Buscador\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport PokemonCard from '../components/PokemonCard'\nimport \"./PokemonListComponent.css\"\nimport { getPokemons } from '../actions/pokemonActions'\nimport Loader from '../components/Loader'\nimport Buscador from '../components/Buscador'\nimport { motion } from \"framer-motion\"\n\n\n\n//En principio, pense hacer el paginador con scrolling. Dado la posicion del scroll y sabiedo\n//cuando seria mi page, podia ir agreagando item a medida que el usuario va bajando. Sin embargo\n//la implementacion no es sencilla porque en mi casi, generaba request tan rapido como el usuairio baja\n//lo que ocasiona en blocking.\n\n//La implemntacion de paginar con el See more!, es simple y trivial, se que es demasiado \n//simple.Aunque intente hacerlo mas complejo e interesante.\n//Los navegadores tienen un limite de elementos en un scroll infinito.\nconst PokemonListComponent = ({ pokemons, dispatch, loading }) => {\n    const [searchArray, setSearcArray] = React.useState(pokemons)\n    const [buscando, setBuscando] = React.useState();\n    const ref = React.useRef()\n\n\n    React.useEffect(() => {\n        dispatch(getPokemons()) //Una vez el Componente esta montado, hace la primera request de limit=9, offset=0\n    }, [])\n\n    function handleClick(e) {\n        e.preventDefault();\n        dispatch(getPokemons())\n\n        //Al click agrega mas pokemones a la lista, request. EL valor de page es un props que\n        //que esta en el reducer. Cada vez que hay un dispatch, page es incrementado e\n        //inyectado como props.\n\n    }\n\n    function handleSearch(term) {\n        let array = pokemons.filter((e) => e.name.startsWith(term)) //Al buscar, filtra pokemons que empieza con la \n        setSearcArray(array)                                        //  con la palabra.\n\n    }\n\n    //motion, es una implementacin de animacion.\n    return (<motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className=\"listContainer\">\n        <Buscador buscando={setBuscando} getState={handleSearch} />\n        <div className=\"list\">\n            {\n                searchArray.length > 0 ? searchArray.map((el, index) => {\n                    return <PokemonCard pokemon={el} key={index} />; //Cuando el usuario busca,  searchArray es mayor a cero. Seria preciso\n                    //revisar cuando  no encuentra nada. Con mas tiempo se aregla este asunto.\n                }) : pokemons.map((el, index) => {\n                    return <PokemonCard pokemon={el} index={index} key={index} />; //Aqui renderiza la lista, sin filtrar, es decir raw.\n                })\n            }\n            <div className=\"paginar\" onClick={handleClick}>\n                <p>See more!</p>\n                {loading && <div>loading...</div>}\n            </div>\n        </div>\n\n\n\n        <div ref={ref}>\n        </div>\n\n\n    </motion.div>\n    )\n}\n\nPokemonListComponent.propTypes = {\n    pokemons: PropTypes.array.isRequired,\n    \n}\n\n\n\nconst mapStateToProps = (state, props) => ({\n    pokemons: state.data.pokemons || [],\n    loading: state.ui.loading || false,\n})\n\n\n\n\nexport default connect(mapStateToProps, null)(PokemonListComponent)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { motion } from \"framer-motion\"\nimport { connect } from 'react-redux'\nimport { backAction } from '../actions/pokemonActions'\nimport \"./PokemonDetails.css\"\nimport arrow from '../assets/arrow.svg'\n//colores aleatorios.\n//hace falta boton de retorno\nconst colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',\n    '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n    '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',\n    '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n    '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',\n    '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n    '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n    '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n    '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',\n    '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\nconst PokemonDetail = ({ dispatch, match, pokemon: { url } }) => {\n    const [poke, setPoke] = React.useState()\n    const [pending, setPending] = React.useState(true)\n    //mantener refeencia en la card de pokemon y no en el header.\n    const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\n    const ref = React.useRef()\n    const executeScroll = () => scrollToRef(ref, { behavior: 'smooth' })\n    //Componente montado hace request. Se que es repetir codigo. Pude haber hecho\n    //una accion de redux, pero esta componente soporta su mismas request y con esto\n    //no poluciona el store de redux. mas limpio\n    React.useEffect(() => {\n        fetch(url, { method: \"GET\" })\n            .then(response => {\n                return response.json()\n            })\n            .then((json) => {\n                setPoke(json)\n                setPending(false)\n                executeScroll()\n            })\n            .catch(e => {\n                console.log(e.message)\n            })\n    }, [url])//cada vez que cambia url, hace la request.\n    return (\n        <motion.div ref={ref} initial={{ x: -300, opacity: 0 }} animate={{ x: 0, opacity: 1 }} exit={{ opacity: 0 }}>\n            <p style={{ padding: 40, fontSize: 40 }}><strong>Pokemon: </strong>{match.params.id}</p>\n            {pending ? <p>pending...</p> : <Card dispatch={dispatch} poke={poke} />}\n        </motion.div>\n    )\n}\n\n//la card de el pokemon\n//dentro esta las stat de la habilidades y la fotografia del pokemon\nconst Card = ({ dispatch, poke }) => {\n    function handleBack() {\n        dispatch(backAction())\n    }\n\n    return (<div>\n        <div className=\"detailsContainer\">\n            {/* <div onClick={handleBack} style={{borderRadius:\"50%\", backgroundColor:'#B3B31A', padding:10, position: \"fixed\", top: 200, left: 30 }}><img src={arrow} /></div> */}\n            <div style={{ display: 'flex', alignContent: \"center\", flexDirection: \"column\" }}>\n                <div>\n                    <img className=\"ellipse\" src={poke.sprites.front_default} />\n                </div>\n\n                <div style={{ width: 500, height: 200 }}>\n                    <div style={{ marginBottom: 20, display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\" }}>\n                        <div >\n                            <p><strong>Weight:</strong> {poke.weight}</p>\n                            <p><strong>Height:</strong> {poke.height}</p></div>\n                        <div style={{ marginLeft: 35 }}>\n                            <p><strong>Specie:</strong> {poke.species.name}</p>\n                            <p><strong>Experience:</strong> {poke.base_experience}</p>\n                        </div>\n\n                    </div>\n                    <div className=\"moves\">\n                        {poke.moves.splice(0, 5).map((move, index) => {\n                            return <div key={index} style={{ backgroundColor: colorArray[index] }} className=\"move\"><p>{move.move.name}</p></div>;\n                        })}\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"charts\">{\n                poke.stats.map((stat, index) => {\n                    return <div key={index}><Chart stat={stat} /></div>;\n                })\n            }</div>\n\n        </div>\n    </div >\n    );\n}\n\n\n//cada barrita de stat se forma aqui. \nconst Chart = ({ stat }) => {\n    React.useEffect(() => {\n        const index = Math.floor(Math.random() * colorArray.length + 1)\n        const canvas = document.getElementById(stat.stat.name);\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = colorArray[index];\n        ctx.strokestyle = 'black';\n        ctx.fillRect(0, 0, 200, canvas.width);\n\n    }, [stat])//cada vez que cambia el parametro\n    return (\n        <div>\n            <p>{stat.stat.name}</p>\n            <canvas id={stat.stat.name} width={stat.base_stat} height=\"10\"></canvas>\n        </div>\n\n\n    );\n}\n\n\n\n\nPokemonDetail.propTypes = {\n    match: PropTypes.object.isRequired,\n    pokemon: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n\n}\n\n\nconst mapStateToProps = (state, props) => ({\n    pokemon: state.data.pokemons.filter(el => el.name == props.match.params.id).map(e => e)[0]\n})\nexport default connect(mapStateToProps, null)(PokemonDetail)\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport logo from './logo.svg';\nimport Header from './components/Header'\nimport './App.css';\nimport PokemonListComponent from './containers/PokemonListComponent';\nimport PokemonDetail from './containers/PokemonDetail'\n\nfunction App() {\n  return (<div>\n    <AnimatePresence>\n      <Header />\n\n      <Route exact path=\"/\" component={PokemonListComponent} />\n      <Route exact path=\"/pokemon/:id\" component={PokemonDetail} />\n    </AnimatePresence>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport configureStore, { history } from './store/configureStore'\nimport { persistStore } from 'redux-persist'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore()\nconst persistor = persistStore(store)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            {/* <PersistGate persistor={persistor} loading={null}> */}\n                <App />\n            {/* </PersistGate> */}\n        </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}